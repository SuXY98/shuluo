////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : MUX4T1_4_sch.vf
// /___/   /\     Timestamp : 11/12/2018 22:22:34
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog E:/Framework/MUX4T1_4_sch.vf -w E:/Framework/MUX4T1_4_sch.sch
//Design Name: MUX4T1_4_sch
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module MUX4T1_4_sch(I0, 
                    I1, 
                    I2, 
                    I3, 
                    s, 
                    o);

    input [3:0] I0;
    input [3:0] I1;
    input [3:0] I2;
    input [3:0] I3;
    input [1:0] s;
   output [3:0] o;
   
   wire XLXN_7;
   wire XLXN_8;
   wire XLXN_9;
   wire XLXN_10;
   wire XLXN_16;
   wire XLXN_18;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_46;
   wire XLXN_47;
   wire XLXN_48;
   wire XLXN_49;
   wire XLXN_51;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_54;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_61;
   wire XLXN_63;
   
   INV  XLXI_1 (.I(s[1]), 
               .O(XLXN_16));
   INV  XLXI_3 (.I(s[0]), 
               .O(XLXN_18));
   AND2  XLXI_4 (.I0(XLXN_18), 
                .I1(XLXN_16), 
                .O(XLXN_63));
   AND2  XLXI_5 (.I0(s[0]), 
                .I1(XLXN_16), 
                .O(XLXN_61));
   AND2  XLXI_6 (.I0(s[1]), 
                .I1(XLXN_18), 
                .O(XLXN_58));
   AND2  XLXI_7 (.I0(s[1]), 
                .I1(s[0]), 
                .O(XLXN_57));
   AND2  XLXI_8 (.I0(I0[0]), 
                .I1(XLXN_63), 
                .O(XLXN_7));
   AND2  XLXI_9 (.I0(I1[0]), 
                .I1(XLXN_61), 
                .O(XLXN_8));
   AND2  XLXI_10 (.I0(I2[0]), 
                 .I1(XLXN_58), 
                 .O(XLXN_9));
   AND2  XLXI_11 (.I0(I3[0]), 
                 .I1(XLXN_57), 
                 .O(XLXN_10));
   OR4  XLXI_12 (.I0(XLXN_10), 
                .I1(XLXN_9), 
                .I2(XLXN_8), 
                .I3(XLXN_7), 
                .O(o[0]));
   AND2  XLXI_28 (.I0(I0[1]), 
                 .I1(XLXN_63), 
                 .O(XLXN_41));
   AND2  XLXI_29 (.I0(I1[1]), 
                 .I1(XLXN_61), 
                 .O(XLXN_42));
   AND2  XLXI_30 (.I0(I2[1]), 
                 .I1(XLXN_58), 
                 .O(XLXN_43));
   AND2  XLXI_31 (.I0(I3[1]), 
                 .I1(XLXN_57), 
                 .O(XLXN_44));
   OR4  XLXI_32 (.I0(XLXN_44), 
                .I1(XLXN_43), 
                .I2(XLXN_42), 
                .I3(XLXN_41), 
                .O(o[1]));
   AND2  XLXI_33 (.I0(I0[2]), 
                 .I1(XLXN_63), 
                 .O(XLXN_46));
   AND2  XLXI_34 (.I0(I1[2]), 
                 .I1(XLXN_61), 
                 .O(XLXN_47));
   AND2  XLXI_35 (.I0(I2[2]), 
                 .I1(XLXN_58), 
                 .O(XLXN_48));
   AND2  XLXI_36 (.I0(I3[2]), 
                 .I1(XLXN_57), 
                 .O(XLXN_49));
   OR4  XLXI_37 (.I0(XLXN_49), 
                .I1(XLXN_48), 
                .I2(XLXN_47), 
                .I3(XLXN_46), 
                .O(o[2]));
   AND2  XLXI_38 (.I0(I0[3]), 
                 .I1(XLXN_63), 
                 .O(XLXN_51));
   AND2  XLXI_39 (.I0(I1[3]), 
                 .I1(XLXN_61), 
                 .O(XLXN_52));
   AND2  XLXI_40 (.I0(I2[3]), 
                 .I1(XLXN_58), 
                 .O(XLXN_53));
   AND2  XLXI_41 (.I0(I3[3]), 
                 .I1(XLXN_57), 
                 .O(XLXN_54));
   OR4  XLXI_42 (.I0(XLXN_54), 
                .I1(XLXN_53), 
                .I2(XLXN_52), 
                .I3(XLXN_51), 
                .O(o[3]));
endmodule
